name: Safe Sync ddns-go

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
    # 1. 准备全新工作空间
    - name: Clean workspace
      run: |
        rm -rf target-repo source-repo
        mkdir target-repo source-repo
    
    # 2. 直接克隆源仓库
    - name: Clone source repository
      run: |
        git clone --depth=1 https://github.com/474706852/ddns-go.git source-repo
    
    # 3. 直接克隆目标仓库（使用显式URL）
    - name: Clone target repository
      run: |
        git clone --depth=1 https://${{ github.actor }}:${{ secrets.SYNC_TOKEN }}@github.com/13ztop/ddns-go.git target-repo
    
    # 4. 安全文件同步
    - name: Safe file sync
      run: |
        cd source-repo
        find . -type f | while read file; do
          if [ -f "../target-repo/$file" ]; then
            cp -v "$file" "../target-repo/$file"
          fi
        done
        echo "✅ 安全同步完成"
    
    # 5. 验证并修复Git仓库状态（重构版）
    - name: Repair Git repository if needed
      run: |
        cd target-repo
        
        # 检查仓库是否损坏
        if ! git fsck --full --strict; then
          echo "⚠️ 仓库损坏，尝试修复..."
          # 备份工作区文件（不包括.git目录）
          cd ..
          mkdir backup-workspace
          # 复制target-repo中除.git外的所有内容
          rsync -a --exclude='.git' target-repo/ backup-workspace/ || true
          
          # 删除并重新克隆target-repo
          rm -rf target-repo
          git clone --depth=1 https://${{ github.actor }}:${{ secrets.SYNC_TOKEN }}@github.com/13ztop/ddns-go.git target-repo
          
          # 将备份的文件覆盖到新克隆的target-repo
          rsync -a backup-workspace/ target-repo/ || true
          rm -rf backup-workspace
          cd target-repo
        fi
        
        # 确保仓库状态正常
        git rev-parse HEAD
        git reset --hard
        git clean -f -d
    
    # 6. 配置Git用户信息
    - name: Configure Git
      run: |
        cd target-repo
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
    
    # 7. 检查变更
    - name: Check for changes
      id: changes
      run: |
        cd target-repo
        change_count=$(git status --porcelain | wc -l | tr -d ' ')
        echo "has_changes=$change_count" >> $GITHUB_OUTPUT
        echo "变更数量: $change_count"
        git status
    
    # 8. 提交变更
    - name: Commit changes
      if: ${{ steps.changes.outputs.has_changes != '0' }}
      run: |
        cd target-repo
        git add -u
        git commit -m "Safe sync: $(date -u +'%Y-%m-%d %H:%M UTC')"
        echo "✅ 变更已提交"
    
    # 9. 推送变更
    - name: Push changes
      if: ${{ steps.changes.outputs.has_changes != '0' }}
      run: |
        cd target-repo
        git push origin main
        echo "🚀 变更已推送到 GitHub"
        
    # 10. 无变更处理
    - name: No changes detected
      if: ${{ steps.changes.outputs.has_changes == '0' }}
      run: echo "🟢 无变更可提交"
