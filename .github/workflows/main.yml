name: Safe Sync ddns-go

on:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC时间0点（北京时间8点）自动同步
  workflow_dispatch:     # 允许手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
    # 准备工作区
    - name: Prepare workspace
      run: |
        rm -rf target-repo source-repo
        mkdir -p target-repo source-repo
    
    # 克隆源仓库
    - name: Clone source repository
      run: |
        git clone --depth=1 https://github.com/474706852/ddns-go.git source-repo
    
    # 克隆目标仓库
    - name: Clone target repository
      run: |
        git clone --depth=1 "https://${{ github.actor }}:${{ secrets.SYNC_TOKEN }}@github.com/13ztop/ddns-go.git" target-repo
    
    # 安全文件同步
    - name: Safe file sync
      run: |
        cd source-repo
        # 仅更新目标仓库中已存在的文件
        find . -type f | while read -r file; do
          if [ -f "../target-repo/$file" ]; then
            echo "更新文件: $file"
            cp -f "$file" "../target-repo/$file"
          fi
        done
        echo "✅ 安全同步完成"
    
    # 配置Git用户信息
    - name: Configure Git
      run: |
        cd target-repo
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
    
    # 检查变更
    - name: Check for changes
      id: changes
      run: |
        cd target-repo
        # 获取变更状态
        git status --porcelain > changes.txt
        change_count=$(wc -l < changes.txt | tr -d ' ')
        echo "has_changes=$change_count" >> $GITHUB_OUTPUT
        
        # 设置变更报告
        if [ "$change_count" -gt 0 ]; then
          echo "📝 检测到变更 ($change_count 个文件)"
          cat changes.txt
        else
          echo "🟢 无变更检测到"
        fi
    
    # 提交变更（仅在检测到变更时执行）
    - name: Commit changes
      if: ${{ steps.changes.outputs.has_changes != '0' }}
      run: |
        cd target-repo
        git add -u
        git commit -m "安全同步: $(date -u +'%Y-%m-%d %H:%M UTC')"
        echo "✅ 已提交 ${{ steps.changes.outputs.has_changes }} 个变更"
    
    # 推送变更（仅在检测到变更时执行）
    - name: Push changes
      if: ${{ steps.changes.outputs.has_changes != '0' }}
      run: |
        cd target-repo
        git push origin main
        echo "🚀 已成功推送变更到 GitHub"
    
    # 最终状态报告（总是执行）
    - name: Final sync report
      if: always()  # 无论前面步骤是否失败都执行
      run: |
        if [ "${{ steps.changes.outputs.has_changes }}" == "0" ]; then
          echo "::notice title=同步报告::🟢 无变更需要推送 - 仓库已是最新状态"
        elif [ "${{ steps.changes.outputs.has_changes }}" != "0" ]; then
          echo "::notice title=同步报告::🚀 已成功推送 ${{ steps.changes.outputs.has_changes }} 个变更"
        else
          echo "::warning title=同步报告::⚠️ 无法确定变更状态 - 请检查日志"
        fi
        
        # 添加时间戳
        echo "🕒 同步完成时间: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
        
        # 添加工作流链接（仅在GitHub环境中）
        if [ -n "$GITHUB_SERVER_URL" ]; then
          echo "🔗 工作流详情: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
        fi
