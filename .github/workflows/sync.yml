name: Full Sync ddns-go with Telegram Notify

on:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC时间0点（北京时间8点）自动同步
  workflow_dispatch:     # 允许手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 13ztop/ddns-go
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.SYNC_TOKEN }}
        repository: 13ztop/ddns-go
        path: target-repo
        fetch-depth: 0
        ref: main

    - name: Reset to origin/main
      run: |
        cd target-repo
        git fetch origin
        git reset --hard origin/main
        echo "✅ 已重置到 origin/main"

    - name: Clone source ddns-go
      run: |
        git clone --depth 1 https://github.com/474706852/ddns-go.git source-repo
        cd source-repo
        git checkout main

    - name: Perform full sync
      run: |
        # 保留目标仓库的.git目录
        find target-repo -mindepth 1 -maxdepth 1 ! -name '.git' -exec rm -rf {} +
        
        # 复制所有文件（包括隐藏文件）
        cp -a source-repo/. target-repo/
        echo "✅ 所有文件已从源仓库同步"

    - name: Check for changes
      id: check-changes
      run: |
        cd target-repo
        git add -A  # 确保所有更改都被暂存
        
        # 使用 git status 检测变更更可靠
        if [ -z "$(git status --porcelain)" ]; then
          echo "changes_detected=false" >> $GITHUB_OUTPUT
          echo "🟢 未检测到变更"
        else
          echo "changes_detected=true" >> $GITHUB_OUTPUT
          echo "🟡 检测到变更"
        fi

    - name: Commit changes
      if: steps.check-changes.outputs.changes_detected == 'true'
      run: |
        cd target-repo
        git config user.name "GitHub Actions Sync"
        git config user.email "actions@github.com"
        git add -A
        git commit -m "Auto-sync: Full update from 474706852/ddns-go @ $(date -u +'%Y-%m-%d %H:%M UTC')"
        echo "🔵 变更已提交"

    - name: Force push changes
      if: steps.check-changes.outputs.changes_detected == 'true'
      run: |
        cd target-repo
        git push origin main --force
        echo "🚀 变更已强制推送到 13ztop/ddns-go"

    - name: Send Telegram notification via curl
      env:
        BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        # 创建基本消息（避免特殊字符问题）
        STATUS="${{ job.status }}"
        CHANGES="${{ steps.check-changes.outputs.changes_detected == 'true' && '有变更 ✅' || '无变更 ⚪' }}"
        TRIGGER="${{ github.event_name == 'workflow_dispatch' && '手动触发' || '定时触发' }}"
        LOG_URL="https://github.com/13ztop/ddns-go/actions/runs/${{ github.run_id }}"
        
        # 使用简单的消息格式
        MESSAGE="🚀 ddns-go 同步完成
        仓库: 13ztop/ddns-go
        状态: $STATUS
        变更: $CHANGES
        触发方式: $TRIGGER
        详细日志: $LOG_URL"
        
        # 发送请求（使用 POST 方法避免编码问题）
        curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
          -d "chat_id=$CHAT_ID" \
          -d "text=$MESSAGE" \
          -d "parse_mode=Markdown" > /dev/null
        
        # 检查结果
        if [ $? -eq 0 ]; then
          echo "✅ Telegram 通知已发送"
        else
          echo "❌ Telegram 通知发送失败"
        fi

    - name: Cleanup
      run: rm -rf source-repo
